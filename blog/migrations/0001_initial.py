# Generated by Django 3.1.1 on 2020-09-25 13:19

from django.db import migrations, models
import django.db.models.deletion
import django_editorjs.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, default='', help_text='short text describe this category', max_length=255, null=True)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50)),
                ('phone', models.CharField(default='', max_length=50)),
                ('email', models.CharField(default='', max_length=50)),
                ('message', models.CharField(default='', max_length=500)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumb', models.ImageField(blank=True, default='', help_text='1024X680', null=True, upload_to='images/')),
                ('photo_small', models.ImageField(blank=True, default='', help_text='900X600', null=True, upload_to='images/')),
                ('photo_large', models.ImageField(blank=True, default='', help_text='1400X1000', null=True, upload_to='images/')),
                ('description', models.CharField(blank=True, default='', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50)),
                ('phone_num', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('job', models.CharField(default='', max_length=50)),
                ('photo_small', models.ImageField(blank=True, help_text='300X300', null=True, upload_to='images/')),
                ('photo_big', models.ImageField(blank=True, help_text='600X600', null=True, upload_to='images/')),
                ('description', models.TextField(help_text='long Description')),
                ('description_short', models.TextField(help_text='Short Description')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='SubScriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mail', models.EmailField(default='', max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('description_short', models.TextField(help_text='Short Description')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('email', models.EmailField(max_length=100)),
                ('facebook', models.CharField(blank=True, max_length=100, null=True)),
                ('twitter', models.CharField(blank=True, max_length=100, null=True)),
                ('insta', models.CharField(blank=True, max_length=100, null=True)),
                ('key_words', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('intro', models.TextField(default='', max_length=255)),
                ('pub_date', models.DateField(auto_now_add=True)),
                ('timestamp', models.DateField(auto_now_add=True)),
                ('pop_in_banner', models.BooleanField(default=False)),
                ('slug', models.SlugField(unique=True)),
                ('read_time', models.IntegerField(help_text='Time to read (Unit:minutes)')),
                ('view_count', models.IntegerField(default=0)),
                ('body', django_editorjs.fields.EditorJsField()),
                ('category', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blog.category')),
                ('photo', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blog.gallery')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-pub_date', '-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=16)),
                ('like', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='like', to='blog.post')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('body', models.TextField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('face', models.CharField(blank=True, default='1', max_length=10, null=True)),
                ('password', models.CharField(default='', max_length=20)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post')),
            ],
            options={
                'ordering': ['-date_added'],
            },
        ),
    ]
